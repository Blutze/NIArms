class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class nia_DL44_skeleton: Default
	{
		skeletonInherit = "";
		skeletonBones[] =
		{
			"C96_recoil","",
			"zasleh","",
			
			"C96_BarrelExtension","C96_recoil",	
			//"M9_Magazine","C96_recoil",
			"C96_Trigger","C96_recoil",
			"C96_follower","C96_recoil",
			"C96_Trigger_box","C96_recoil",
			"C96_Hammer","C96_recoil",
			"C96_Safety","C96_recoil",
			"C96_sightladder","C96_BarrelExtension",
			"C96_sightnotch","C96_sightladder",
			"C96_Boltcarrier","C96_BarrelExtension",
			"C96_Boltcarrier_empty","C96_BarrelExtension",
			"countround1","C96_recoil",
			"countround2","C96_recoil",
			"countround3","C96_recoil",
			"countround4","C96_recoil",
			"countround5","C96_recoil",
			"countround6","C96_recoil",
			"countround7","C96_recoil",
			"countround8","C96_recoil",
			"countround9","C96_recoil",
			"Magazine","C96_recoil",
			"M712_10rndmagazine","Magazine",
			"M712_selector", "C96_recoil",
			"dummyround","Magazine",
			"dummyround2","Magazine",
			"dummyround3","Magazine",
			"dummyround4","Magazine",
			"dummyround5","Magazine",
			"dummyround6","Magazine",
			"dummyround7","Magazine",
			"dummyround8","Magazine",
			"dummyround9","Magazine",
			"dummyround10","Magazine",
			"casing","C96_Boltcarrier",
			"animbullet1", "casing"
			/*,
			"M9_Ammo","C96_recoil"*/
			//TODO: Ammo and whatnot
		};
	};
};
class CfgModels
{
	class Default
	{
		sectionsInherit = "";
		sections[] = {};
		skeletonName = "";
	};
	
	class nia_DL44m: Default
	{
		skeletonName = "nia_DL44_skeleton";
		sections[]=
		{
			"zasleh"
		};
			
		class Animations
		{
// zEROING
			#define Range_100 minValue = 0.1-0.01;maxValue = 0.1*1;
			#define Range_200 minValue = 0.1*2-0.01;maxValue = 0.1*2;
			#define Range_300 minValue = 0.1*3-0.01;maxValue = 0.1*3;
			#define Range_400 minValue = 0.1*4-0.01;maxValue = 0.1*4;
			#define Range_500 minValue = 0.1*5-0.01;maxValue = 0.1*5;
			#define Range_600 minValue = 0.1*6-0.01;maxValue = 0.1*6;
			#define Range_700 minValue = 0.1*7-0.01;maxValue = 0.1*7;
			#define Range_800 minValue = 0.1*8-0.01;maxValue = 0.1*8;
			#define Range_900 minValue = 0.1*9-0.01;maxValue = 0.1*9;
			#define Range_1000 minValue = 0.1*10-0.01;maxValue = 0.1*10;
			class Range_100_rot
			{
				type			= rotation;
				memory		  = 1;
				selection	   = "C96_sightladder";
				axis			= "ironsight_axis";
				source		  = zeroing.0;
				Range_100
				angle0		  = (rad 0);
				angle1		  = (rad 0.5);
			};
			class Range_200_rot: range_100_rot
			{
				Range_200
				angle0		  = (rad 0);
				angle1		  = (rad 1.3);
			};
			class Range_300_rot: range_200_rot
			{
				Range_300
				angle1		  = (rad 1.8);
			};
			class range_400_rot: range_200_rot
			{
				Range_400
				angle1		  = (rad 2.5);
			};
			class range_500_rot: range_200_rot
			{
				Range_500
				angle1		  = (rad 4);
			};
			class range_600_rot: range_200_rot
			{
				Range_600
				angle1		  = (rad 4.2);
			};
			class range_700_rot: range_200_rot
			{
				Range_700
				angle1		  = (rad 4.4);
			};
			class range_800_rot: range_200_rot
			{
				Range_800
				angle1		  = (rad 4.6);
			};
			class range_900_rot: range_200_rot
			{
				Range_900
				angle1		  = (rad 4.8);
			};
			class range_1000_rot: range_200_rot
			{
				Range_1000
				angle1		  = (rad 5);
			};
			class range_100_move: range_100_rot
			{
				type			= translation;
				selection		= "C96_sightnotch";
				axis			= "ironsight";
				Range_100
				offset0 = 0.0;
				offset1 = -0.1;
			};
			class range_200_move: range_100_move
			{
				Range_200
				offset1 = -0.1;
			};
			class range_300_move: range_200_move
			{
				Range_300
			};
			class range_400_move: range_200_move
			{
				Range_400
			};
			class range_500_move: range_200_move
			{
				Range_500
			};
			class range_600_move: range_200_move
			{
				Range_600
				offset1 = -0.1;
			};
			class range_700_move: range_200_move
			{
				Range_700
				offset1 = -0.1;
			};
			class range_800_move: range_200_move
			{
				Range_800
			};
			class range_900_move: range_200_move
			{
				Range_900
			};
			class range_1000_move: range_200_move
			{
				Range_1000
			};
			class safety_mode_rot
			{
				type=rotation;
				source=weaponMuzzle;
				selection="C96_Safety";
				axis="safe_axis";
				memory=1;
				minValue=0.99;
				maxValue=1;
				angle0=0;
				angle1=(rad -60);
			};
		// Hiding magazine when none is loaded
			class magazine_hasMag_hide
			{
				type			= hide;
				source			= hasMagazine.0;
				selection		= "Magazine";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.5;
			};
			
		// Magazine when reloading
		// Hidden when grabing new magazine
			class magazine_reloadMag_hide
			{
				type			= hide;
				source			= reloadMagazine.0;
				selection		= "Magazine";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= (16/110);
				unhideValue		= (48/110);
			};
			
		// Going down
			class magazine_reloadMag_move_1
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "Magazine";
				axis			= "magazine_axis";
				minValue		= (11/110);
				maxValue		= (17/110);
				offset0			= 0;
				offset1			= -1;
			};
			class magazine_reloadMag_rot_1
			{
				type=rotation;
				source=reloadMagazine.0;
				selection="Magazine";
				axis="mag_rot_axis";
				memory=1;
				minValue=(19/110);
				maxValue=(30/110);
				angle0=0;
				angle1=(rad 40);
			};
			class magazine_reloadMag_movelat_1
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "Magazine";
				axis			= "mag_lat_axis";
				minValue=(19/110);
				maxValue=(30/110);
				offset0			= 0;
				offset1			= 1;
			};
			class magazine_reloadMag_movelat_2: magazine_reloadMag_movelat_1
			{
				minValue=(43/110);
				maxValue=(47/110);
				offset0	= 0;
				offset1	= -1;
			};
			class magazine_reloadMag_rot_2: magazine_reloadMag_rot_1
			{
				minValue=(43/110);
				maxValue=(53/110);
				angle0=0;
				angle1=(rad -40);
			};
		// Going up
			class magazine_reloadMag_move_2: magazine_reloadMag_move_1
			{
				minValue		= (47/110);
				maxValue		= (50/110);
				offset0			= 0;
				offset1			=0.6;
			};
			class magazine_reloadMag_move_3: magazine_reloadMag_move_1
			{
				minValue		= (56/110);
				maxValue		= (60/110);
				offset0			= 0;
				offset1			= 0.4;
			};
			class carrier_empty_reloadmag_move1
			{
				type			= translation;
				selection		= "C96_Boltcarrier_empty";
				axis			= "slide_axis";
				source			= reloadMagazine.0;
				minValue		= (86/110);
				maxValue		= (87.5/110);
				offset0			= 0;
				offset1			= -1;
			};
			class carrier_reloadmag_move1
			{
				type			= translation;
				selection		= "C96_Boltcarrier";
				axis			= "slide_axis";
				source			= reloadMagazine.0;
				minValue		= (80/110);
				maxValue		= (83/110);
				offset0			= 0;
				offset1			= 1;
			};
			class carrier_reloadmag_move2
			{
				type			= translation;
				selection		= "C96_Boltcarrier";
				axis			= "slide_axis";
				source			= reloadMagazine.0;
				minValue		= (86/110);
				maxValue		= (87.5/110);
				offset0			= 0;
				offset1			= -1;
			};
		// Trigger when firing
			class trigger_reload_rot
			{
				type			= rotation;
				source			= trigger.0;
				selection		= "C96_Trigger";
				axis			= "trigger_axis";
				minValue		= 0.5;
				maxValue		= 1;
				angle0			= 0;
				angle1			= -(rad 15);
			};
			class casing_reloadmag
			{
				type			= hide;
				source			= reloadMagazine.0;
				selection		= "casing";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.001;
				unhidevalue	= (83/110);
			}; 
			class casing_reloadmag_move
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "casing";
				axis			= "magbullet_axis2";
				minValue		 =0.01;
				maxValue		= 0.02;
				offset0			= 0;
				offset1			= -1;
			};
			class casing_reloadmag_move2
			{
				type			= translation;
				source			= reloadMagazine.0;
				selection		= "casing";
				axis			= "magbullet_axis2";
				minValue		= (85/128);
				maxValue		= (87/128);

				offset0			= 0;
				offset1			= 1;
			};
		// Barrel when firing Translation
			class barrel_reload_move
			{
				type			= translation;
				source			= reload.0;
				selection		= "C96_BarrelExtension";
				axis			= "barrel_tr_axis";
				minValue		= 0.83;
				maxValue		= 0.85;
				offset0			= 0;
				offset1			= 0.4;
			};
			class barrel_reload_move2
			{
				type			= translation;
				source			= reload.0;
				selection		= "C96_BarrelExtension";
				axis			= "barrel_tr_axis";
				minValue		= 0.45;
				maxValue		= 0.77;
				offset0			= 0;
				offset1			= -0.4;
			};
			// Hammer when firing Rotation
			class carrier_isempty_hide1
			{
				type			= hide;
				source			= isEmpty.0;
				selection		= "C96_Boltcarrier";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.5;
			};
			class carrier_isempty_hide2
			{
				type			= hide;
				source			= isEmpty.0;
				selection		= "C96_Boltcarrier_empty";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0;
				unhideValue		= 0.7;
			};

		class FireModeSwitch
			{
				type = "rotationz";
                source="weaponMode";
                memory=1;
                selection="M712_selector";
                animPeriod=0;
                axis="Firemode_axis";
                minValue=0.0;
                maxValue=0.01;
                minPhase=0.0;
                maxPhase=1;
				angle0= 0;
				angle1= "rad 30";
			};
		// Randomized rotation of muzzle flash
			class zaslehROT
			{
				type			= rotationX;
				source			= ammoRandom;	// use ammo count as phase for animation
				sourceAddress	= loop;			// loop when phase out of bounds
				selection		= "zasleh";		// selection we want to rotate
				axis			= "zasleh_axis";			// no own axis - center of rotation is computed from selection
				centerFirstVertex = true;		// use first vertex of selection as center of rotation
				minValue		= 0;
				maxValue		= 4;			// rotation angle will be 360/4 = 90 degrees
				angle0			= (rad 0);
				angle1			= (rad 360);
			};

		// Recoil simulating animations
			class recoil_reload_rot_1
			{
				type			= rotation;
				source			= reload.0;
				selection		= "C96_recoil";
				axis			= "recoil_axis";
				memory			= 1;
				minValue		= 0.87;
				maxValue		= 1;
				angle0			= 0;
				angle1			= -(rad 0.5);
			};
			class recoil_reload_rot_2: recoil_reload_rot_1
			{
				minValue		= 0.72;
				maxValue		= 0.87;
				angle1			= -(rad 8);
			};
			class recoil_reload_rot_3: recoil_reload_rot_1
			{
				minValue		= 0.45;
				maxValue		= 0.72;
				angle1			= (rad 6);
			};
			class recoil_reload_rot_4: recoil_reload_rot_1
			{
				minValue		= 0.25;
				maxValue		= 0.45;
				angle1			= (rad 1.5);
			};
			class recoil_reload_rot_5: recoil_reload_rot_1
			{
				minValue		= 0;
				maxValue		= 0.25;
				angle1			= (rad 1);
			};
 			class bullet1_hide
            {
                type="hide";
                source="revolving";
                selection="countround1";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 0.00;
                unhideValue = 1*(1/9);
            };
            class bullet2_hide
            {
                type="hide";
                source="revolving";
                selection="countround2";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 0.00;
                unhideValue = 2*(1/9);
            };
            class bullet3_hide
            {
                type="hide";
                source="revolving";
                selection="countround3";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 0.00;
                unhideValue = 3*(1/9);
            };
            class bullet4_hide
            {
                type="hide";
                source="revolving";
                selection="countround4";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 0.00;
                unhideValue = 4*(1/9);
            };
            class bullet5_hide
            {
                type="hide";
                source="revolving";
                selection="countround5";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 0.00;
                unhideValue = 5*(1/9);
            };
			class bullet6_hide
            {
                type="hide";
                source="revolving";
                selection="countround6";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 0.00;
                unhideValue = 5*(1/9);
            };
			class bullet7_hide
            {
                type="hide";
                source="revolving";
                selection="countround7";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 0.00;
                unhideValue = 6*(1/9);
            };
			class bullet8_hide
            {
                type="hide";
                source="revolving";
                selection="countround8";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 0.00;
                unhideValue = 7*(1/9);
            };
			class bullet9_hide
            {
                type="hide";
                source="revolving";
                selection="countround9";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 0.00;
                unhideValue = 8*(1/9);
            };
 			class dummyround1_hide
            {
                type="hide";
                source="revolving";
                selection="dummyround";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 9*(1/9);
            };
 			class dummyround2_hide
            {
                type="hide";
                source="revolving";
                selection="dummyround2";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 8*(1/9);
            };
            class dummyround3_hide
            {
                type="hide";
                source="revolving";
                selection="dummyround3";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 7*(1/9);
            };
            class dummyround4_hide
            {
                type="hide";
                source="revolving";
                selection="dummyround4";
                minValue = 0.0;
                maxvalue = 1;
				hideValue = 6*(1/9);
            };
            class dummyround5_hide
            {
                type="hide";
                source="revolving";
                selection="dummyround5";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 5*(1/9);
            };
			class dummyround6_hide
            {
                type="hide";
                source="revolving";
                selection="dummyround6";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 4*(1/9);
            };
			class dummyround7_hide
            {
                type="hide";
                source="revolving";
                selection="dummyround7";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 3*(1/9);
            };
			class dummyround8_hide
            {
                type="hide";
                source="revolving";
                selection="dummyround8";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 2*(1/9);
            };
			class dummyround9_hide
            {
                type="hide";
                source="revolving";
                selection="dummyround9";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 1*(1/9);
            };
			class dummyround10_hide
            {
                type="hide";
                source="revolving";
                selection="dummyround10";
                minValue = 0.0;
                maxvalue = 1;
                hideValue = 0.05;
            };

			
			class dummy_reloadmag
			{
				type			= hide;
				source			= reloadMagazine.0;
				selection		= "dummyround";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.0;
				unhidevalue	= 0.26667;
			}; 
			
			class dummy_reload
			{
				type			= hide;
				source			= reload.0;
				selection		= "dummyround";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.01;
			}; 
				class casing_reload
			{
				type			= hide;
				source			= reload.0;
				selection		= "casing";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.45;
				unhidevalue	= 0.64;
			}; 
				class bullet_reload1
			{
				type			= hide;
				source			= reload.0;
				selection		= "animbullet1";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.64;
			}; 
			
			class casing_reload_move
			{
				type			= translation;
				source			= reload.0;
				selection		= "casing";
				axis			= "magbullet_axis2";
				minValue		= 0.63;
				maxValue		= 0.64;
				offset0			= -1;
				offset1			= 0;
			};
			class casing_reload_move2
			{
				type			= translation;
				source			= reload.0;
				selection		= "casing";
				axis			= "magbullet_axis2";
				minValue		= 0;
				maxValue		= 0.63;
				offset0			= 1;
				offset1			= 0;
			};

				class casinghide
			{
				type			= hide;
				source			= isEmpty.0;
				selection		= "casing";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.1;
			}; 


		};
	};
	class DL44 : nia_DL44m {};
};
